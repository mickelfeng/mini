mini code note

@auther@ 		    @mini

@data@				2012-6-14
@data@				add model validator
@descript@

					on = create create model use.
					on = update update model use
					length = mini_validator_length
					validtest = model validtest() function
					public function rules()
					{
						return array(
							array('first_name, last_name, email', 'length', 'on'=>'update', 
							'max'=>3,'tooLong'=>"{mark}xxxxxx{max}"),
							array('first_name, last_name, email', 'validtest'),
						);
					}
					model->getErrors();  get errors list.

@data@				2012-6-13
@title@				add code comment and phpdoc comment

@data@				2012-6-12
@title@				add mini exception
@descript@	
					call mini::t() will thorw exception
 				
@data@				2012-6-10
@title@				add model relations and scopes function
@descript@

					public function relations()
				    {
				        return array(
				                	"profileR"=>array(
					                        'profile',
					                        'profile_id',
				                        ),
				                	"profileRR"=>array(
					                		'profile',
					                         array(":message"=>"email"),
					                        'mymessage'
				                	)
				             
				                );
				    }
				    public function scopes()
				    {
				        return array(
				                	"profile"=>array(
				                	        	'hasmany'=>false,
				                	        	'select'=>array('first_name','b.message'),
				                	        	'condition'=>'first_name=:name',
				                	        	'join'=>"left join profile b on b.id=profile_id and b.message='hello1'",
				                	        	'order'=>'id desc'
				                	        ),
				                );
				    }
					public function __call()
					{
						$this->scopes();
						$this->relations();
						$this->record->find($condition);
					}
					
					
					
@data@				2012-6-7
@title@				add mini define variable 
@descript@
					MINI_PATH 
					MINI_EXCEPTION_HANDLER
					MINI_ERROR_HANDLER
					MINI_DEBUG

					import file ,example:index.php
					-----------------------------------------------------------------------------
					defined('RUNPATH') || define('RUNPATH', dirname(__FILE__));
					defined('MINI_EXCEPTION_HANDLER') || define('MINI_EXCEPTION_HANDLER',true);
					defined('MINI_ERROR_HANDLER') || define('MINI_ERROR_HANDLER',true);
					defined('MINI_DEBUG') || define('MINI_DEBUG', true);
					
					/**
					 * include php miniframework import file
					 */
					include_once '../mini/mini.class.php';
					/**
					 * set config path
					 */
					$config = RUNPATH."/config/config.xml";
					
					mini::run(RUNPATH,$config)->assembly(RUNPATH."/config/autoload.php")->web();
					-----------------------------------------------------------------------------
					
					
@data@				2012-6-6
@title@				add response , set view to response
@descript@			
					add function response->setBody(view = render(isreturn = true))
					application call response->sendResponse() send header and output body
					isreturn = true not echo ,because  header before not output.
					but if view->controller() so,parentId != null set isreturn = false.
					add mini end() function, and controller->jump call event autosave, and mini end()

@data@				2012-6-5
@title@				add error and eception handle
						
						
										
@data@				2012-6-5
@title@				add log class
@descript@
					add config.xml 
					<logger>
						<log name="mylog">
							<class>mini_log_file</class>
							<levels>info,warning</levels>
							<categories>app</categories>
							<file>mylog.log</file>
						</log>
					</logger>					
					will call mini_log_file find levels info,warngin log  categories to mylog.log file
				    
				    
				    	
@date@				2012-6-4
@title@				add event class
@descript@			
					add /events  dir, config.xml <event></event> 
					
					if config <evnet><e>login</e></evnet>will auto add events list
					
					onbeforeApp()，onbeforeController(),onbeforeAction()
					onendApp(), onendController(), onbeforeAction()	
					
					if user implementation	that function  in xxxEvent class, will be call before dispatch app,
					controller, action. 
				
					
@date@				2012-6-3
@title@				add model version controlle.
@descript@			
									  one request
									
					mem-----------------unitofwork-------------------db
					|					  |                          |
					|<------fetch---------|<--cache------------------|
					|					  |
					|---insert--update--->|	
					|					  |
					|					  |	
					|					  |
					|					  |----------save----------->|
					
					
				    why we add version controller? because the same time, client will send many request, 
				    so  client will operation db insert,update. but when request end , unitofwork will flush
				    all change to db. other request will write override or read dirty data from db. 
				    ((
					    mem version <- db version 
					    if update 
					    	 mem version = mem verson + 1  
					    if mem version <= db version 
					    	error   －> throw Exception （Optimistic Offline Lock）
					    else 
					    	succes 
				    )) 
				    
					
@data@				2012-6-2
@title@				add model auto save
@descript@			
					1.model  autoSave=true  
					if model update,insert,delete, do not call save(), because request end, model auto flush to db
					but must add version columns in table.
					
					2.model  autoSave=false
					if model update,insert, delete must call save() flush to db
					
				    3.model  autoIncrement=true
				    table primarykey columns must autoincrement. 
				    waring:
				    	autoIncrement=true && autoSave=false 
				    if model->create() must immediately call save(), because model call __get() must  primaykey extist.
				    
				    4.model autoIncrement=false
				    model primayKey = getGeneratorId(),  that generator globally unique id. from table idgenerator
				    or Override getGeneratorId method.
				    
					5.model delete()
					model not call __get __set and create function
					
			
					
@data@				2012-6-1
@title@				init miniFramework